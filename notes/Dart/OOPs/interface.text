interface:
An interface defines a syntax that a class must follow. It is used to achieve abstraction in the Dart programming language. When you implement an interface, you must implement all the properties and methods defined in the interface. Keyword implements is used to implement an interface.

class InterfaceName {
// code
}

class ClassName implements InterfaceName {
// code
}
Note: Most of the time, abstract class is used instead of concrete class to declare an interface.

example of multiple interface and you can learn single inheritance too by it
// abstract class as interface
abstract class Area {
void area();
}
// abstract class as interface
abstract class Perimeter {
void perimeter();
}
// implements multiple interfaces
class Rectangle implements Area, Perimeter {
// properties
int length, breadth;

// constructor
Rectangle(this.length, this.breadth);

// implementation of area()
@override
void area() {
print('The area of the rectangle is ${length _ breadth}');
}
// implementation of perimeter()
@override
void perimeter() {
print('The perimeter of the rectangle is ${2 _ (length + breadth)}');
}
}

void main() {
Rectangle rectangle = Rectangle(10, 20);
rectangle.area();
rectangle.perimeter();
}
